name: Create GitHub Release

# --------------------------------------------------------------------------------
# HOW TO CREATE A NEW RELEASE
# --------------------------------------------------------------------------------
# 1. Commit your changes to the main/release branch.
# 2. Tag a new version using semantic versioning:
#      git tag v1.3.0
#      git push origin v1.3.0
#
# 3. This workflow will:
#    âœ… Create a GitHub Release for v1.3.0
#    âœ… Auto-generate release notes based on commits & PRs
#    âœ… Ensure changelog compares from the last versioned tag (e.g., v1.2.3 â†’ v1.3.0)
#    âœ… Update the major tag (e.g., `v1`) to always point to the latest release
#
# 4. Consumers of your action can reference it like:
#      uses: furmidgeuk/snyk-scan-action@v1
# --------------------------------------------------------------------------------

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Read version and major tag
        id: version_info
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          MAJOR=$(echo "$TAG" | grep -oE '^v[0-9]+')
          echo "VERSION=$TAG" >> $GITHUB_ENV
          echo "MAJOR_VERSION=$MAJOR" >> $GITHUB_ENV

      - name: Find previous version tag
        id: previous
        run: |
          CURRENT_TAG="${GITHUB_REF#refs/tags/}"
          PREV=$(git tag --sort=-creatordate | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | grep -v "^$CURRENT_TAG" | head -n1 || true)
          echo "PREVIOUS_TAG=$PREV" >> $GITHUB_ENV
          echo "ðŸ•˜ Previous version tag: $PREV"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          generate_release_notes: true
          previous_tag_name: ${{ env.PREVIOUS_TAG }}
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Update major version tag (e.g., v1, v2, v3)
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Updating major version tag: $MAJOR_VERSION"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag -f "$MAJOR_VERSION"
          git push origin -f "$MAJOR_VERSION"